{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-apigatewayv2": "1.159.0",
    "@aws-cdk/aws-ec2": "1.159.0",
    "@aws-cdk/aws-elasticloadbalancingv2": "1.159.0",
    "@aws-cdk/aws-iam": "1.159.0",
    "@aws-cdk/aws-lambda": "1.159.0",
    "@aws-cdk/aws-servicediscovery": "1.159.0",
    "@aws-cdk/core": "1.159.0",
    "constructs": "^3.3.69"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-acmpca": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ACMPCA",
          "packageId": "Amazon.CDK.AWS.ACMPCA"
        },
        "java": {
          "maven": {
            "artifactId": "acmpca",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.acmpca"
        },
        "js": {
          "npm": "@aws-cdk/aws-acmpca"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-acmpca",
          "module": "aws_cdk.aws_acmpca"
        }
      }
    },
    "@aws-cdk/aws-apigatewayv2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.APIGatewayv2",
          "packageId": "Amazon.CDK.AWS.APIGatewayv2"
        },
        "java": {
          "maven": {
            "artifactId": "apigatewayv2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.apigatewayv2"
        },
        "js": {
          "npm": "@aws-cdk/aws-apigatewayv2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-apigatewayv2",
          "module": "aws_cdk.aws_apigatewayv2"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-certificatemanager": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CertificateManager",
          "packageId": "Amazon.CDK.AWS.CertificateManager"
        },
        "java": {
          "maven": {
            "artifactId": "certificatemanager",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.certificatemanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-certificatemanager"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-certificatemanager",
          "module": "aws_cdk.aws_certificatemanager"
        }
      }
    },
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation"
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codeguruprofiler": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
          "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
        },
        "java": {
          "maven": {
            "artifactId": "codeguruprofiler",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codeguruprofiler"
        },
        "js": {
          "npm": "@aws-cdk/aws-codeguruprofiler"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codeguruprofiler",
          "module": "aws_cdk.aws_codeguruprofiler"
        }
      }
    },
    "@aws-cdk/aws-codestarnotifications": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeStarNotifications",
          "packageId": "Amazon.CDK.AWS.CodeStarNotifications"
        },
        "java": {
          "maven": {
            "artifactId": "codestarnotifications",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codestarnotifications"
        },
        "js": {
          "npm": "@aws-cdk/aws-codestarnotifications"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codestarnotifications",
          "module": "aws_cdk.aws_codestarnotifications"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-efs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EFS",
          "packageId": "Amazon.CDK.AWS.EFS"
        },
        "java": {
          "maven": {
            "artifactId": "efs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.efs"
        },
        "js": {
          "npm": "@aws-cdk/aws-efs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-efs",
          "module": "aws_cdk.aws_efs"
        }
      }
    },
    "@aws-cdk/aws-elasticloadbalancingv2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2",
          "packageId": "Amazon.CDK.AWS.ElasticLoadBalancingV2"
        },
        "java": {
          "maven": {
            "artifactId": "elasticloadbalancingv2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.elasticloadbalancingv2"
        },
        "js": {
          "npm": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-elasticloadbalancingv2",
          "module": "aws_cdk.aws_elasticloadbalancingv2"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-route53": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Route53",
          "packageId": "Amazon.CDK.AWS.Route53"
        },
        "java": {
          "maven": {
            "artifactId": "route53",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.route53"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-route53",
          "module": "aws_cdk.aws_route53"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-servicediscovery": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ServiceDiscovery",
          "packageId": "Amazon.CDK.AWS.ServiceDiscovery"
        },
        "java": {
          "maven": {
            "artifactId": "servicediscovery",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.servicediscovery"
        },
        "js": {
          "npm": "@aws-cdk/aws-servicediscovery"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-servicediscovery",
          "module": "aws_cdk.aws_servicediscovery"
        }
      }
    },
    "@aws-cdk/aws-signer": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Signer",
          "packageId": "Amazon.CDK.AWS.Signer"
        },
        "java": {
          "maven": {
            "artifactId": "signer",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.signer"
        },
        "js": {
          "npm": "@aws-cdk/aws-signer"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-signer",
          "module": "aws_cdk.aws_signer"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/custom-resources": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CustomResources",
          "packageId": "Amazon.CDK.AWS.CustomResources"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-customresources",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.customresources"
        },
        "js": {
          "npm": "@aws-cdk/custom-resources"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.custom-resources",
          "module": "aws_cdk.custom_resources"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "Integrations for AWS APIGateway V2",
  "docs": {
    "stability": "experimental"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.58.0 (build f8ba112)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "apigateway"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-apigatewayv2-integrations",
  "readme": {
    "markdown": "# AWS APIGatewayv2 Integrations\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\n## Table of Contents\n\n- [HTTP APIs](#http-apis)\n  - [Lambda Integration](#lambda)\n  - [HTTP Proxy Integration](#http-proxy)\n  - [Private Integration](#private-integration)\n  - [Request Parameters](#request-parameters)\n- [WebSocket APIs](#websocket-apis)\n  - [Lambda WebSocket Integration](#lambda-websocket-integration)\n\n## HTTP APIs\n\nIntegrations connect a route to backend resources. HTTP APIs support Lambda proxy, AWS service, and HTTP proxy integrations. HTTP proxy integrations are also known as private integrations.\n\n### Lambda\n\nLambda integrations enable integrating an HTTP API route with a Lambda function. When a client invokes the route, the\nAPI Gateway service forwards the request to the Lambda function and returns the function's response to the client.\n\nThe API Gateway service will invoke the lambda function with an event payload of a specific format. The service expects\nthe function to respond in a specific format. The details on this format is available at [Working with AWS Lambda\nproxy integrations](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html).\n\nThe following code configures a route `GET /books` with a Lambda proxy integration.\n\n```ts\nimport { HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const booksDefaultFn: lambda.Function;\nconst booksIntegration = new HttpLambdaIntegration('BooksIntegration', booksDefaultFn);\n\nconst httpApi = new apigwv2.HttpApi(this, 'HttpApi');\n\nhttpApi.addRoutes({\n  path: '/books',\n  methods: [ apigwv2.HttpMethod.GET ],\n  integration: booksIntegration,\n});\n```\n\n### HTTP Proxy\n\nHTTP Proxy integrations enables connecting an HTTP API route to a publicly routable HTTP endpoint. When a client\ninvokes the route, the API Gateway service forwards the entire request and response between the API Gateway endpoint\nand the integrating HTTP endpoint. More information can be found at [Working with HTTP proxy\nintegrations](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-http.html).\n\nThe following code configures a route `GET /books` with an HTTP proxy integration to an HTTP endpoint\n`get-books-proxy.myproxy.internal`.\n\n```ts\nimport { HttpUrlIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst booksIntegration = new HttpUrlIntegration('BooksIntegration', 'https://get-books-proxy.myproxy.internal');\n\nconst httpApi = new apigwv2.HttpApi(this, 'HttpApi');\n\nhttpApi.addRoutes({\n  path: '/books',\n  methods: [ apigwv2.HttpMethod.GET ],\n  integration: booksIntegration,\n});\n```\n\n### Private Integration\n\nPrivate integrations enable integrating an HTTP API route with private resources in a VPC, such as Application Load Balancers or\nAmazon ECS container-based applications.  Using private integrations, resources in a VPC can be exposed for access by\nclients outside of the VPC.\n\nThe following integrations are supported for private resources in a VPC.\n\n#### Application Load Balancer\n\nThe following code is a basic application load balancer private integration of HTTP API:\n\n```ts\nimport { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'lb', { vpc });\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener),\n});\n```\n\nWhen an imported load balancer is used, the `vpc` option must be specified for `HttpAlbIntegration`.\n\n#### Network Load Balancer\n\nThe following code is a basic network load balancer private integration of HTTP API:\n\n```ts\nimport { HttpNlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst lb = new elbv2.NetworkLoadBalancer(this, 'lb', { vpc });\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpNlbIntegration('DefaultIntegration', listener),\n});\n```\n\nWhen an imported load balancer is used, the `vpc` option must be specified for `HttpNlbIntegration`.\n\n#### Cloud Map Service Discovery\n\nThe following code is a basic discovery service private integration of HTTP API:\n\n```ts\nimport * as servicediscovery from '@aws-cdk/aws-servicediscovery';\nimport { HttpServiceDiscoveryIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst vpcLink = new apigwv2.VpcLink(this, 'VpcLink', { vpc });\nconst namespace = new servicediscovery.PrivateDnsNamespace(this, 'Namespace', {\n  name: 'boobar.com',\n  vpc,\n});\nconst service = namespace.createService('Service');\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpServiceDiscoveryIntegration('DefaultIntegration', service, {\n    vpcLink,\n  }),\n});\n```\n\n### Request Parameters\n\nRequest parameter mapping allows API requests from clients to be modified before they reach backend integrations.\nParameter mapping can be used to specify modifications to request parameters. See [Transforming API requests and\nresponses](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-parameter-mapping.html).\n\nThe following example creates a new header - `header2` - as a copy of `header1` and removes `header1`.\n\n```ts\nimport { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const lb: elbv2.ApplicationLoadBalancer;\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener, {\n    parameterMapping: new apigwv2.ParameterMapping()\n      .appendHeader('header2', apigwv2.MappingValue.requestHeader('header1'))\n      .removeHeader('header1'),\n  }),\n});\n```\n\nTo add mapping keys and values not yet supported by the CDK, use the `custom()` method:\n\n```ts\nimport { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const lb: elbv2.ApplicationLoadBalancer;\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener, {\n    parameterMapping: new apigwv2.ParameterMapping().custom('myKey', 'myValue'),\n  }),\n});\n```\n\n\n## WebSocket APIs\n\nWebSocket integrations connect a route to backend resources. The following integrations are supported in the CDK.\n\n### Lambda WebSocket Integration\n\nLambda integrations enable integrating a WebSocket API route with a Lambda function. When a client connects/disconnects\nor sends message specific to a route, the API Gateway service forwards the request to the Lambda function\n\nThe API Gateway service will invoke the lambda function with an event payload of a specific format.\n\nThe following code configures a `sendmessage` route with a Lambda integration\n\n```ts\nimport { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi');\nnew apigwv2.WebSocketStage(this, 'mystage', {\n  webSocketApi,\n  stageName: 'dev',\n  autoDeploy: true,\n});\n\ndeclare const messageHandler: lambda.Function;\nwebSocketApi.addRoute('sendmessage', {\n  integration: new WebSocketLambdaIntegration('SendMessageIntegration', messageHandler),\n});\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-apigatewayv2-integrations",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.APIGatewayv2.Integrations",
      "packageId": "Amazon.CDK.AWS.APIGatewayv2.Integrations"
    },
    "java": {
      "maven": {
        "artifactId": "apigatewayv2-integrations",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.apigatewayv2.integrations"
    },
    "js": {
      "npm": "@aws-cdk/aws-apigatewayv2-integrations"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-apigatewayv2-integrations",
      "module": "aws_cdk.aws_apigatewayv2_integrations"
    }
  },
  "types": {
    "@aws-cdk/aws-apigatewayv2-integrations.HttpAlbIntegration": {
      "assembly": "@aws-cdk/aws-apigatewayv2-integrations",
      "base": "@aws-cdk/aws-apigatewayv2.HttpRouteIntegration",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const lb: elbv2.ApplicationLoadBalancer;\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener, {\n    parameterMapping: new apigwv2.ParameterMapping().custom('myKey', 'myValue'),\n  }),\n});",
        "stability": "experimental",
        "summary": "The Application Load Balancer integration resource for HTTP API."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-integrations.HttpAlbIntegration",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/http/alb.ts",
          "line": 22
        },
        "parameters": [
          {
            "docs": {
              "summary": "id of the underlying integration construct."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the ELB application listener."
            },
            "name": "listener",
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener"
            }
          },
          {
            "docs": {
              "summary": "properties to configure the integration."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-integrations.HttpAlbIntegrationProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/http/alb.ts",
        "line": 16
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Bind this integration to the route."
          },
          "locationInModule": {
            "filename": "lib/http/alb.ts",
            "line": 30
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-apigatewayv2.HttpRouteIntegration",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2.HttpRouteIntegrationBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2.HttpRouteIntegrationConfig"
            }
          }
        }
      ],
      "name": "HttpAlbIntegration",
      "properties": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/http/private/integration.ts",
            "line": 44
          },
          "name": "connectionType",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2.HttpConnectionType"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/http/private/integration.ts",
            "line": 41
          },
          "name": "httpMethod",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2.HttpMethod"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/http/private/integration.ts",
            "line": 43
          },
          "name": "integrationType",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2.HttpIntegrationType"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/http/private/integration.ts",
            "line": 42
          },
          "name": "payloadFormatVersion",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2.PayloadFormatVersion"
          }
        }
      ],
      "symbolId": "lib/http/alb:HttpAlbIntegration"
    },
    "@aws-cdk/aws-apigatewayv2-integrations.HttpAlbIntegrationProps": {
      "assembly": "@aws-cdk/aws-apigatewayv2-integrations",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const lb: elbv2.ApplicationLoadBalancer;\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener, {\n    parameterMapping: new apigwv2.ParameterMapping()\n      .appendHeader('header2', apigwv2.MappingValue.requestHeader('header1'))\n      .removeHeader('header1'),\n  }),\n});",
        "stability": "experimental",
        "summary": "Properties to initialize `HttpAlbIntegration`."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-integrations.HttpAlbIntegrationProps",
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-integrations.HttpPrivateIntegrationOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/alb.ts",
        "line": 10
      },
      "name": "HttpAlbIntegrationProps",
      "symbolId": "lib/http/alb:HttpAlbIntegrationProps"
    },
    "@aws-cdk/aws-apigatewayv2-integrations.HttpLambdaIntegration": {
      "assembly": "@aws-cdk/aws-apigatewayv2-integrations",
      "base": "@aws-cdk/aws-apigatewayv2.HttpRouteIntegration",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import { HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const booksDefaultFn: lambda.Function;\nconst booksIntegration = new HttpLambdaIntegration('BooksIntegration', booksDefaultFn);\n\nconst httpApi = new apigwv2.HttpApi(this, 'HttpApi');\n\nhttpApi.addRoutes({\n  path: '/books',\n  methods: [ apigwv2.HttpMethod.GET ],\n  integration: booksIntegration,\n});",
        "stability": "experimental",
        "summary": "The Lambda Proxy integration resource for HTTP API."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-integrations.HttpLambdaIntegration",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/http/lambda.ts",
          "line": 44
        },
        "parameters": [
          {
            "docs": {
              "summary": "id of the underlying integration construct."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the Lambda handler to integrate with."
            },
            "name": "handler",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.IFunction"
            }
          },
          {
            "docs": {
              "summary": "properties to configure the integration."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-integrations.HttpLambdaIntegrationProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/http/lambda.ts",
        "line": 35
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Bind this integration to the route."
          },
          "locationInModule": {
            "filename": "lib/http/lambda.ts",
            "line": 66
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-apigatewayv2.HttpRouteIntegration",
          "parameters": [
            {
              "name": "_",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2.HttpRouteIntegrationBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2.HttpRouteIntegrationConfig"
            }
          }
        },
        {
          "docs": {
            "remarks": "In some cases, there is\nsome additional work to do, such as adding permissions for the API to access\nthe target. This work is necessary whether the integration has just been\ncreated for this route or it is an existing one, previously created for other\nroutes. In most cases, however, concrete implementations do not need to\noverride this method.",
            "stability": "experimental",
            "summary": "Complete the binding of the integration to the route."
          },
          "locationInModule": {
            "filename": "lib/http/lambda.ts",
            "line": 53
          },
          "name": "completeBind",
          "overrides": "@aws-cdk/aws-apigatewayv2.HttpRouteIntegration",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2.HttpRouteIntegrationBindOptions"
              }
            }
          ],
          "protected": true
        }
      ],
      "name": "HttpLambdaIntegration",
      "symbolId": "lib/http/lambda:HttpLambdaIntegration"
    },
    "@aws-cdk/aws-apigatewayv2-integrations.HttpLambdaIntegrationProps": {
      "assembly": "@aws-cdk/aws-apigatewayv2-integrations",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Lambda Proxy integration properties.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as apigatewayv2_integrations from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const parameterMapping: apigatewayv2.ParameterMapping;\ndeclare const payloadFormatVersion: apigatewayv2.PayloadFormatVersion;\nconst httpLambdaIntegrationProps: apigatewayv2_integrations.HttpLambdaIntegrationProps = {\n  parameterMapping: parameterMapping,\n  payloadFormatVersion: payloadFormatVersion,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-integrations.HttpLambdaIntegrationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/lambda.ts",
        "line": 16
      },
      "name": "HttpLambdaIntegrationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "undefined requests are sent to the backend unmodified",
            "see": "https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-parameter-mapping.html",
            "stability": "experimental",
            "summary": "Specifies how to transform HTTP requests before sending them to the backend."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/lambda.ts",
            "line": 29
          },
          "name": "parameterMapping",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2.ParameterMapping"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "PayloadFormatVersion.VERSION_2_0",
            "see": "https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html",
            "stability": "experimental",
            "summary": "Version of the payload sent to the lambda handler."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/lambda.ts",
            "line": 22
          },
          "name": "payloadFormatVersion",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2.PayloadFormatVersion"
          }
        }
      ],
      "symbolId": "lib/http/lambda:HttpLambdaIntegrationProps"
    },
    "@aws-cdk/aws-apigatewayv2-integrations.HttpNlbIntegration": {
      "assembly": "@aws-cdk/aws-apigatewayv2-integrations",
      "base": "@aws-cdk/aws-apigatewayv2.HttpRouteIntegration",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import { HttpNlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst lb = new elbv2.NetworkLoadBalancer(this, 'lb', { vpc });\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpNlbIntegration('DefaultIntegration', listener),\n});",
        "stability": "experimental",
        "summary": "The Network Load Balancer integration resource for HTTP API."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-integrations.HttpNlbIntegration",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/http/nlb.ts",
          "line": 22
        },
        "parameters": [
          {
            "docs": {
              "summary": "id of the underlying integration construct."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the ELB network listener."
            },
            "name": "listener",
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkListener"
            }
          },
          {
            "docs": {
              "summary": "properties to configure the integration."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-integrations.HttpNlbIntegrationProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/http/nlb.ts",
        "line": 16
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Bind this integration to the route."
          },
          "locationInModule": {
            "filename": "lib/http/nlb.ts",
            "line": 30
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-apigatewayv2.HttpRouteIntegration",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2.HttpRouteIntegrationBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2.HttpRouteIntegrationConfig"
            }
          }
        }
      ],
      "name": "HttpNlbIntegration",
      "properties": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/http/private/integration.ts",
            "line": 44
          },
          "name": "connectionType",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2.HttpConnectionType"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/http/private/integration.ts",
            "line": 41
          },
          "name": "httpMethod",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2.HttpMethod"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/http/private/integration.ts",
            "line": 43
          },
          "name": "integrationType",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2.HttpIntegrationType"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/http/private/integration.ts",
            "line": 42
          },
          "name": "payloadFormatVersion",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2.PayloadFormatVersion"
          }
        }
      ],
      "symbolId": "lib/http/nlb:HttpNlbIntegration"
    },
    "@aws-cdk/aws-apigatewayv2-integrations.HttpNlbIntegrationProps": {
      "assembly": "@aws-cdk/aws-apigatewayv2-integrations",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties to initialize `HttpNlbIntegration`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as apigatewayv2_integrations from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const parameterMapping: apigatewayv2.ParameterMapping;\ndeclare const vpcLink: apigatewayv2.VpcLink;\nconst httpNlbIntegrationProps: apigatewayv2_integrations.HttpNlbIntegrationProps = {\n  method: apigatewayv2.HttpMethod.ANY,\n  parameterMapping: parameterMapping,\n  secureServerName: 'secureServerName',\n  vpcLink: vpcLink,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-integrations.HttpNlbIntegrationProps",
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-integrations.HttpPrivateIntegrationOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/nlb.ts",
        "line": 10
      },
      "name": "HttpNlbIntegrationProps",
      "symbolId": "lib/http/nlb:HttpNlbIntegrationProps"
    },
    "@aws-cdk/aws-apigatewayv2-integrations.HttpPrivateIntegrationOptions": {
      "assembly": "@aws-cdk/aws-apigatewayv2-integrations",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Base options for private integration.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as apigatewayv2_integrations from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const parameterMapping: apigatewayv2.ParameterMapping;\ndeclare const vpcLink: apigatewayv2.VpcLink;\nconst httpPrivateIntegrationOptions: apigatewayv2_integrations.HttpPrivateIntegrationOptions = {\n  method: apigatewayv2.HttpMethod.ANY,\n  parameterMapping: parameterMapping,\n  secureServerName: 'secureServerName',\n  vpcLink: vpcLink,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-integrations.HttpPrivateIntegrationOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/base-types.ts",
        "line": 6
      },
      "name": "HttpPrivateIntegrationOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "HttpMethod.ANY",
            "stability": "experimental",
            "summary": "The HTTP method that must be used to invoke the underlying HTTP proxy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/base-types.ts",
            "line": 18
          },
          "name": "method",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2.HttpMethod"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "undefined requests are sent to the backend unmodified",
            "see": "https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-parameter-mapping.html",
            "stability": "experimental",
            "summary": "Specifies how to transform HTTP requests before sending them to the backend."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/base-types.ts",
            "line": 33
          },
          "name": "parameterMapping",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2.ParameterMapping"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "undefined private integration traffic will use HTTP protocol",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigatewayv2-integration-tlsconfig.html",
            "stability": "experimental",
            "summary": "Specifies the server name to verified by HTTPS when calling the backend integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/base-types.ts",
            "line": 26
          },
          "name": "secureServerName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a new VpcLink is created",
            "stability": "experimental",
            "summary": "The vpc link to be used for the private integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/base-types.ts",
            "line": 12
          },
          "name": "vpcLink",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2.IVpcLink"
          }
        }
      ],
      "symbolId": "lib/http/base-types:HttpPrivateIntegrationOptions"
    },
    "@aws-cdk/aws-apigatewayv2-integrations.HttpServiceDiscoveryIntegration": {
      "assembly": "@aws-cdk/aws-apigatewayv2-integrations",
      "base": "@aws-cdk/aws-apigatewayv2.HttpRouteIntegration",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import * as servicediscovery from '@aws-cdk/aws-servicediscovery';\nimport { HttpServiceDiscoveryIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst vpcLink = new apigwv2.VpcLink(this, 'VpcLink', { vpc });\nconst namespace = new servicediscovery.PrivateDnsNamespace(this, 'Namespace', {\n  name: 'boobar.com',\n  vpc,\n});\nconst service = namespace.createService('Service');\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpServiceDiscoveryIntegration('DefaultIntegration', service, {\n    vpcLink,\n  }),\n});",
        "stability": "experimental",
        "summary": "The Service Discovery integration resource for HTTP API."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-integrations.HttpServiceDiscoveryIntegration",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/http/service-discovery.ts",
          "line": 21
        },
        "parameters": [
          {
            "docs": {
              "summary": "id of the underlying integration construct."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the service discovery resource to integrate with."
            },
            "name": "service",
            "type": {
              "fqn": "@aws-cdk/aws-servicediscovery.IService"
            }
          },
          {
            "docs": {
              "summary": "properties to configure the integration."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-integrations.HttpServiceDiscoveryIntegrationProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/http/service-discovery.ts",
        "line": 15
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Bind this integration to the route."
          },
          "locationInModule": {
            "filename": "lib/http/service-discovery.ts",
            "line": 29
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-apigatewayv2.HttpRouteIntegration",
          "parameters": [
            {
              "name": "_",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2.HttpRouteIntegrationBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2.HttpRouteIntegrationConfig"
            }
          }
        }
      ],
      "name": "HttpServiceDiscoveryIntegration",
      "properties": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/http/private/integration.ts",
            "line": 44
          },
          "name": "connectionType",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2.HttpConnectionType"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/http/private/integration.ts",
            "line": 41
          },
          "name": "httpMethod",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2.HttpMethod"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/http/private/integration.ts",
            "line": 43
          },
          "name": "integrationType",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2.HttpIntegrationType"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/http/private/integration.ts",
            "line": 42
          },
          "name": "payloadFormatVersion",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2.PayloadFormatVersion"
          }
        }
      ],
      "symbolId": "lib/http/service-discovery:HttpServiceDiscoveryIntegration"
    },
    "@aws-cdk/aws-apigatewayv2-integrations.HttpServiceDiscoveryIntegrationProps": {
      "assembly": "@aws-cdk/aws-apigatewayv2-integrations",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import * as servicediscovery from '@aws-cdk/aws-servicediscovery';\nimport { HttpServiceDiscoveryIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst vpcLink = new apigwv2.VpcLink(this, 'VpcLink', { vpc });\nconst namespace = new servicediscovery.PrivateDnsNamespace(this, 'Namespace', {\n  name: 'boobar.com',\n  vpc,\n});\nconst service = namespace.createService('Service');\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpServiceDiscoveryIntegration('DefaultIntegration', service, {\n    vpcLink,\n  }),\n});",
        "stability": "experimental",
        "summary": "Properties to initialize `HttpServiceDiscoveryIntegration`."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-integrations.HttpServiceDiscoveryIntegrationProps",
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-integrations.HttpPrivateIntegrationOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/service-discovery.ts",
        "line": 9
      },
      "name": "HttpServiceDiscoveryIntegrationProps",
      "symbolId": "lib/http/service-discovery:HttpServiceDiscoveryIntegrationProps"
    },
    "@aws-cdk/aws-apigatewayv2-integrations.HttpUrlIntegration": {
      "assembly": "@aws-cdk/aws-apigatewayv2-integrations",
      "base": "@aws-cdk/aws-apigatewayv2.HttpRouteIntegration",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import { HttpLambdaAuthorizer, HttpLambdaResponseType } from '@aws-cdk/aws-apigatewayv2-authorizers';\nimport { HttpUrlIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\n// This function handles your auth logic\ndeclare const authHandler: lambda.Function;\n\nconst authorizer = new HttpLambdaAuthorizer('BooksAuthorizer', authHandler, {\n  responseTypes: [HttpLambdaResponseType.SIMPLE], // Define if returns simple and/or iam response\n});\n\nconst api = new apigwv2.HttpApi(this, 'HttpApi');\n\napi.addRoutes({\n  integration: new HttpUrlIntegration('BooksIntegration', 'https://get-books-proxy.myproxy.internal'),\n  path: '/books',\n  authorizer,\n});",
        "stability": "experimental",
        "summary": "The HTTP Proxy integration resource for HTTP API."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-integrations.HttpUrlIntegration",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/http/http-proxy.ts",
          "line": 38
        },
        "parameters": [
          {
            "docs": {
              "summary": "id of the underlying integration construct."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the URL to proxy to."
            },
            "name": "url",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "properties to configure the integration."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-integrations.HttpUrlIntegrationProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/http/http-proxy.ts",
        "line": 32
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Bind this integration to the route."
          },
          "locationInModule": {
            "filename": "lib/http/http-proxy.ts",
            "line": 42
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-apigatewayv2.HttpRouteIntegration",
          "parameters": [
            {
              "name": "_",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2.HttpRouteIntegrationBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2.HttpRouteIntegrationConfig"
            }
          }
        }
      ],
      "name": "HttpUrlIntegration",
      "symbolId": "lib/http/http-proxy:HttpUrlIntegration"
    },
    "@aws-cdk/aws-apigatewayv2-integrations.HttpUrlIntegrationProps": {
      "assembly": "@aws-cdk/aws-apigatewayv2-integrations",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties to initialize a new `HttpProxyIntegration`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as apigatewayv2_integrations from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const parameterMapping: apigatewayv2.ParameterMapping;\nconst httpUrlIntegrationProps: apigatewayv2_integrations.HttpUrlIntegrationProps = {\n  method: apigatewayv2.HttpMethod.ANY,\n  parameterMapping: parameterMapping,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-integrations.HttpUrlIntegrationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/http-proxy.ts",
        "line": 14
      },
      "name": "HttpUrlIntegrationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "HttpMethod.ANY",
            "stability": "experimental",
            "summary": "The HTTP method that must be used to invoke the underlying HTTP proxy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/http-proxy.ts",
            "line": 19
          },
          "name": "method",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2.HttpMethod"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "undefined requests are sent to the backend unmodified",
            "see": "https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-parameter-mapping.html",
            "stability": "experimental",
            "summary": "Specifies how to transform HTTP requests before sending them to the backend."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/http-proxy.ts",
            "line": 26
          },
          "name": "parameterMapping",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2.ParameterMapping"
          }
        }
      ],
      "symbolId": "lib/http/http-proxy:HttpUrlIntegrationProps"
    },
    "@aws-cdk/aws-apigatewayv2-integrations.WebSocketLambdaIntegration": {
      "assembly": "@aws-cdk/aws-apigatewayv2-integrations",
      "base": "@aws-cdk/aws-apigatewayv2.WebSocketRouteIntegration",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi');\nnew apigwv2.WebSocketStage(this, 'mystage', {\n  webSocketApi,\n  stageName: 'dev',\n  autoDeploy: true,\n});\n\ndeclare const messageHandler: lambda.Function;\nwebSocketApi.addRoute('sendmessage', {\n  integration: new WebSocketLambdaIntegration('SendMessageIntegration', messageHandler),\n});",
        "stability": "experimental",
        "summary": "Lambda WebSocket Integration."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-integrations.WebSocketLambdaIntegration",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/websocket/lambda.ts",
          "line": 23
        },
        "parameters": [
          {
            "docs": {
              "summary": "id of the underlying integration construct."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "the Lambda function handler."
            },
            "name": "handler",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.IFunction"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/websocket/lambda.ts",
        "line": 14
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Bind this integration to the route."
          },
          "locationInModule": {
            "filename": "lib/websocket/lambda.ts",
            "line": 28
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-apigatewayv2.WebSocketRouteIntegration",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2.WebSocketRouteIntegrationBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2.WebSocketRouteIntegrationConfig"
            }
          }
        }
      ],
      "name": "WebSocketLambdaIntegration",
      "symbolId": "lib/websocket/lambda:WebSocketLambdaIntegration"
    },
    "@aws-cdk/aws-apigatewayv2-integrations.WebSocketMockIntegration": {
      "assembly": "@aws-cdk/aws-apigatewayv2-integrations",
      "base": "@aws-cdk/aws-apigatewayv2.WebSocketRouteIntegration",
      "docs": {
        "stability": "experimental",
        "summary": "Mock WebSocket Integration.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_integrations from '@aws-cdk/aws-apigatewayv2-integrations';\nconst webSocketMockIntegration = new apigatewayv2_integrations.WebSocketMockIntegration('id');",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-integrations.WebSocketMockIntegration",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/websocket/mock.ts",
          "line": 16
        },
        "parameters": [
          {
            "docs": {
              "summary": "id of the underlying integration construct."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/websocket/mock.ts",
        "line": 11
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Bind this integration to the route."
          },
          "locationInModule": {
            "filename": "lib/websocket/mock.ts",
            "line": 20
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-apigatewayv2.WebSocketRouteIntegration",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2.WebSocketRouteIntegrationBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2.WebSocketRouteIntegrationConfig"
            }
          }
        }
      ],
      "name": "WebSocketMockIntegration",
      "symbolId": "lib/websocket/mock:WebSocketMockIntegration"
    }
  },
  "version": "1.159.0",
  "fingerprint": "**********"
}
